/******************************************************************************
*  Generated by PSoC Designer 5.4.2946
******************************************************************************/
#include <m8c.h>
// S_row address and mask defines
#pragma	ioport	S_row_Data_ADDR:	0x0
BYTE			S_row_Data_ADDR;
#pragma	ioport	S_row_DriveMode_0_ADDR:	0x100
BYTE			S_row_DriveMode_0_ADDR;
#pragma	ioport	S_row_DriveMode_1_ADDR:	0x101
BYTE			S_row_DriveMode_1_ADDR;
#pragma	ioport	S_row_DriveMode_2_ADDR:	0x3
BYTE			S_row_DriveMode_2_ADDR;
#pragma	ioport	S_row_GlobalSelect_ADDR:	0x2
BYTE			S_row_GlobalSelect_ADDR;
#pragma	ioport	S_row_IntCtrl_0_ADDR:	0x102
BYTE			S_row_IntCtrl_0_ADDR;
#pragma	ioport	S_row_IntCtrl_1_ADDR:	0x103
BYTE			S_row_IntCtrl_1_ADDR;
#pragma	ioport	S_row_IntEn_ADDR:	0x1
BYTE			S_row_IntEn_ADDR;
#define S_row_MASK 0x1
// S_colA address and mask defines
#pragma	ioport	S_colA_Data_ADDR:	0x0
BYTE			S_colA_Data_ADDR;
#pragma	ioport	S_colA_DriveMode_0_ADDR:	0x100
BYTE			S_colA_DriveMode_0_ADDR;
#pragma	ioport	S_colA_DriveMode_1_ADDR:	0x101
BYTE			S_colA_DriveMode_1_ADDR;
#pragma	ioport	S_colA_DriveMode_2_ADDR:	0x3
BYTE			S_colA_DriveMode_2_ADDR;
#pragma	ioport	S_colA_GlobalSelect_ADDR:	0x2
BYTE			S_colA_GlobalSelect_ADDR;
#pragma	ioport	S_colA_IntCtrl_0_ADDR:	0x102
BYTE			S_colA_IntCtrl_0_ADDR;
#pragma	ioport	S_colA_IntCtrl_1_ADDR:	0x103
BYTE			S_colA_IntCtrl_1_ADDR;
#pragma	ioport	S_colA_IntEn_ADDR:	0x1
BYTE			S_colA_IntEn_ADDR;
#define S_colA_MASK 0x2
// S_colB address and mask defines
#pragma	ioport	S_colB_Data_ADDR:	0x0
BYTE			S_colB_Data_ADDR;
#pragma	ioport	S_colB_DriveMode_0_ADDR:	0x100
BYTE			S_colB_DriveMode_0_ADDR;
#pragma	ioport	S_colB_DriveMode_1_ADDR:	0x101
BYTE			S_colB_DriveMode_1_ADDR;
#pragma	ioport	S_colB_DriveMode_2_ADDR:	0x3
BYTE			S_colB_DriveMode_2_ADDR;
#pragma	ioport	S_colB_GlobalSelect_ADDR:	0x2
BYTE			S_colB_GlobalSelect_ADDR;
#pragma	ioport	S_colB_IntCtrl_0_ADDR:	0x102
BYTE			S_colB_IntCtrl_0_ADDR;
#pragma	ioport	S_colB_IntCtrl_1_ADDR:	0x103
BYTE			S_colB_IntCtrl_1_ADDR;
#pragma	ioport	S_colB_IntEn_ADDR:	0x1
BYTE			S_colB_IntEn_ADDR;
#define S_colB_MASK 0x4
// CLK address and mask defines
#pragma	ioport	CLK_Data_ADDR:	0x0
BYTE			CLK_Data_ADDR;
#pragma	ioport	CLK_DriveMode_0_ADDR:	0x100
BYTE			CLK_DriveMode_0_ADDR;
#pragma	ioport	CLK_DriveMode_1_ADDR:	0x101
BYTE			CLK_DriveMode_1_ADDR;
#pragma	ioport	CLK_DriveMode_2_ADDR:	0x3
BYTE			CLK_DriveMode_2_ADDR;
#pragma	ioport	CLK_GlobalSelect_ADDR:	0x2
BYTE			CLK_GlobalSelect_ADDR;
#pragma	ioport	CLK_IntCtrl_0_ADDR:	0x102
BYTE			CLK_IntCtrl_0_ADDR;
#pragma	ioport	CLK_IntCtrl_1_ADDR:	0x103
BYTE			CLK_IntCtrl_1_ADDR;
#pragma	ioport	CLK_IntEn_ADDR:	0x1
BYTE			CLK_IntEn_ADDR;
#define CLK_MASK 0x8
// LATCH address and mask defines
#pragma	ioport	LATCH_Data_ADDR:	0x0
BYTE			LATCH_Data_ADDR;
#pragma	ioport	LATCH_DriveMode_0_ADDR:	0x100
BYTE			LATCH_DriveMode_0_ADDR;
#pragma	ioport	LATCH_DriveMode_1_ADDR:	0x101
BYTE			LATCH_DriveMode_1_ADDR;
#pragma	ioport	LATCH_DriveMode_2_ADDR:	0x3
BYTE			LATCH_DriveMode_2_ADDR;
#pragma	ioport	LATCH_GlobalSelect_ADDR:	0x2
BYTE			LATCH_GlobalSelect_ADDR;
#pragma	ioport	LATCH_IntCtrl_0_ADDR:	0x102
BYTE			LATCH_IntCtrl_0_ADDR;
#pragma	ioport	LATCH_IntCtrl_1_ADDR:	0x103
BYTE			LATCH_IntCtrl_1_ADDR;
#pragma	ioport	LATCH_IntEn_ADDR:	0x1
BYTE			LATCH_IntEn_ADDR;
#define LATCH_MASK 0x10
// EN address and mask defines
#pragma	ioport	EN_Data_ADDR:	0x0
BYTE			EN_Data_ADDR;
#pragma	ioport	EN_DriveMode_0_ADDR:	0x100
BYTE			EN_DriveMode_0_ADDR;
#pragma	ioport	EN_DriveMode_1_ADDR:	0x101
BYTE			EN_DriveMode_1_ADDR;
#pragma	ioport	EN_DriveMode_2_ADDR:	0x3
BYTE			EN_DriveMode_2_ADDR;
#pragma	ioport	EN_GlobalSelect_ADDR:	0x2
BYTE			EN_GlobalSelect_ADDR;
#pragma	ioport	EN_IntCtrl_0_ADDR:	0x102
BYTE			EN_IntCtrl_0_ADDR;
#pragma	ioport	EN_IntCtrl_1_ADDR:	0x103
BYTE			EN_IntCtrl_1_ADDR;
#pragma	ioport	EN_IntEn_ADDR:	0x1
BYTE			EN_IntEn_ADDR;
#define EN_MASK 0x20
